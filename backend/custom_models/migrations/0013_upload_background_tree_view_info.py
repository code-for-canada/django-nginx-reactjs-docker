# Generated by Django 2.1.7 on 2019-05-30 14:07
# Edited by Francis Normand to upload the background tree view
# content (one in Organizational Structure section and one in Team
# Information section) of the image descriptions for the sample test

from django.db import migrations


def upload_background_tree_view_info(apps, schema_editor):
    # get models
    language = apps.get_model("custom_models", "Language")
    item_type = apps.get_model("custom_models", "ItemType")
    item = apps.get_model("custom_models", "Item")
    item_text = apps.get_model("custom_models", "ItemText")

    # get db alias
    db_alias = schema_editor.connection.alias

    # lookup languages; do not use bulk_create since we need these objects later on
    l_english = (
        language.objects.using(db_alias)
        .filter(ISO_Code_1="en", ISO_Code_2="en-ca")
        .last()
    )
    l_french = (
        language.objects.using(db_alias)
        .filter(ISO_Code_1="fr", ISO_Code_2="fr-ca")
        .last()
    )
    background_id = (
        item_text.objects.using(db_alias)
        .filter(text_detail="Background", language=l_english)
        .last()
        .item_id
    )

    # create item_types; do not use bulk_create since we need these objects later on
    it_tree_view = item_type(type_desc="tree-view")
    it_tree_view.save()

    # create items; do not use bulk_create since we need these objects later on
    # organizational structure tree view object
    i_tree_view_of_org_structure = item(
        parent_id=background_id, item_type_id=it_tree_view, order=1
    )
    i_tree_view_of_org_structure.save()

    # team information tree view object
    i_tree_view_of_team_info = item(
        parent_id=background_id, item_type_id=it_tree_view, order=2
    )
    i_tree_view_of_team_info.save()

    # bulk create item_text
    item_text.objects.using(db_alias).bulk_create(
        [
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Jenna Icard - President",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Jenna Icard - Présidente",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Amari Kinsler - Corporate Affairs Director",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Amari Kinsler - Directeur, Affaires ministérielles",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Marc Sheridan - Human Resources Manager",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Marc Sheridan - Gestionnaire, Ressources humaines",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Bob McNutt - Finance Manager",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Bob McNutt - Gestionnaire, Finances",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Lana Hussad - Information Technology Manager",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Lana Hussad - Gestionnaire, Technologies de l'information",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Geneviève Bédard - Research and Innovations Director",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Geneviève Bédard - Directrice, Recherche et innovations",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Bartosz Greco - Program Development Director",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Bartosz Greco - Directeur, Développement de programmes",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Nancy Ward - Services and Communications Director",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Nancy Ward - Directrice, Services et communications",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Claude Huard - Quality Assurance Manager (You)",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Claude Huard - Gestionnaire, Assurance de la qualité (vous)",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Haydar Kalil - Services and Support Manager",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Haydar Kalil - Gestionnaire, Service et soutien",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Geoffrey Hamma - Audits Manager",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Geoffrey Hamma - Gestionnaire, Vérifications",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Lucy Trang - E-Training Manager",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_org_structure,
                text_detail="Lucy Trang - Gestionnaire, Formation en ligne",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_team_info,
                text_detail="Claude Huard - Manager (You)",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_team_info,
                text_detail="Claude Huard - Gestionnaire (vous)",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_team_info,
                text_detail="Danny McBride - QA Analyst",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_team_info,
                text_detail="Danny McBride - Analyste de l’assurance de la qualité",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_team_info,
                text_detail="Serge Duplessis - QA Analyst",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_team_info,
                text_detail="Serge Duplessis - Analyste de l’assurance de la qualité",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_team_info,
                text_detail="Marina Richter - QA Analyst",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_team_info,
                text_detail="Marina Richter - Analyste de l’assurance de la qualité",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_team_info,
                text_detail="Mary Woodside - QA Analyst",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_team_info,
                text_detail="Mary Woodside - Analyste de l’assurance de la qualité",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_team_info,
                text_detail="Charlie Wang - QA Analyst",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_team_info,
                text_detail="Charlie Wang - Analyste de l’assurance de la qualité",
                language=l_french,
            ),
            item_text(
                item_id=i_tree_view_of_team_info,
                text_detail="Jack Laurier - QA Analyst",
                language=l_english,
            ),
            item_text(
                item_id=i_tree_view_of_team_info,
                text_detail="Jack Laurier - Analyste de l’assurance de la qualité",
                language=l_french,
            ),
        ]
    )


def destroy_background_tree_view_info(apps, schema_editor):
    # get models
    language = apps.get_model("custom_models", "Language")
    item_type = apps.get_model("custom_models", "ItemType")
    item = apps.get_model("custom_models", "Item")
    item_text = apps.get_model("custom_models", "ItemText")
    # get db alias
    db_alias = schema_editor.connection.alias
    # get language objects
    l_english = (
        language.objects.using(db_alias)
        .filter(ISO_Code_1="en", ISO_Code_2="en-ca")
        .last()
    )
    l_french = (
        language.objects.using(db_alias)
        .filter(ISO_Code_1="fr", ISO_Code_2="fr-ca")
        .last()
    )
    # get item_type objects
    it_tree_view = (
        item_type.objects.using(db_alias).filter(type_desc="tree-view").last()
    )

    # get item objects
    background_id = (
        item_text.objects.using(db_alias)
        .filter(text_detail="Background", language=l_english)
        .last()
        .item_id
    )
    i_tree_view_of_org_structure = (
        item.objects.using(db_alias)
        .filter(parent_id=background_id, item_type_id=it_tree_view, order=1)
        .last()
    )
    i_tree_view_of_team_info = (
        item.objects.using(db_alias)
        .filter(parent_id=background_id, item_type_id=it_tree_view, order=1)
        .last()
    )

    # destroy item_text
    item_text.objects.using(db_alias).filter(
        item_id=i_tree_view_of_org_structure, language=l_english
    ).delete()
    item_text.objects.using(db_alias).filter(
        item_id=i_tree_view_of_org_structure, language=l_french
    ).delete()
    item_text.objects.using(db_alias).filter(
        item_id=i_tree_view_of_team_info, language=l_english
    ).delete()
    item_text.objects.using(db_alias).filter(
        item_id=i_tree_view_of_team_info, language=l_french
    ).delete()

    # destroy items; inverted order as children must be deleted first
    i_tree_view_of_org_structure.delete()
    i_tree_view_of_team_info.delete()
    it_tree_view.delete()


class Migration(migrations.Migration):

    dependencies = [("custom_models", "0012_update_emib_sample_fr")]

    operations = [
        migrations.RunPython(
            upload_background_tree_view_info, destroy_background_tree_view_info
        )
    ]
