# Generated by Django 2.1.7 on 2019-05-30 14:07
# Edited by Francis Normand to upload the background tree view
# content (one in Organizational Structure section and one in Team
# Information section) of the image descriptions for the sample test

from django.db import migrations

ORIGINAL_TREE_VIEW_ITEM_NAME = "tree-view"
NEW_TREE_VIEW_ITEM_NAME = "tree_view"
ORIGINAL_ORG_STRUCTURE_TREE_VIEW_ITEM_NAME = "organizational-structure-tree-child"
NEW_ORG_STRUCTURE_TREE_VIEW_ITEM_NAME = "organizational_structure_tree_child"
ORIGINAL_TEAM_INFO_TREE_VIEW_ITEM_NAME = "team-information-tree-child"
NEW_TEAM_INFO_TREE_VIEW_ITEM_NAME = "team_information_tree_child"


def update_item_type_names(apps, schema_editor):
    # get models
    item_type = apps.get_model("custom_models", "ItemType")

    # get db alias
    db_alias = schema_editor.connection.alias

    # get item_type objects
    it_tree_view = (
        item_type.objects.using(db_alias)
        .filter(type_desc=ORIGINAL_TREE_VIEW_ITEM_NAME)
        .last()
    )
    it_organizational_structure_tree_child = (
        item_type.objects.using(db_alias)
        .filter(type_desc=ORIGINAL_ORG_STRUCTURE_TREE_VIEW_ITEM_NAME)
        .last()
    )
    it_team_information_tree_child = (
        item_type.objects.using(db_alias)
        .filter(type_desc=ORIGINAL_TEAM_INFO_TREE_VIEW_ITEM_NAME)
        .last()
    )

    # replace the item type names
    it_tree_view.type_desc = NEW_TREE_VIEW_ITEM_NAME
    it_tree_view.save()
    it_organizational_structure_tree_child.type_desc = (
        NEW_ORG_STRUCTURE_TREE_VIEW_ITEM_NAME
    )
    it_organizational_structure_tree_child.save()
    it_team_information_tree_child.type_desc = NEW_TEAM_INFO_TREE_VIEW_ITEM_NAME
    it_team_information_tree_child.save()


def rollback_update_item_type_names(apps, schema_editor):
    # get models
    item_type = apps.get_model("custom_models", "ItemType")

    # get db alias
    db_alias = schema_editor.connection.alias

    # get item_type objects
    it_tree_view = (
        item_type.objects.using(db_alias)
        .filter(type_desc=NEW_TREE_VIEW_ITEM_NAME)
        .last()
    )
    it_organizational_structure_tree_child = (
        item_type.objects.using(db_alias)
        .filter(type_desc=NEW_ORG_STRUCTURE_TREE_VIEW_ITEM_NAME)
        .last()
    )
    it_team_information_tree_child = (
        item_type.objects.using(db_alias)
        .filter(type_desc=NEW_TEAM_INFO_TREE_VIEW_ITEM_NAME)
        .last()
    )

    # replace the item type names
    it_tree_view.type_desc = ORIGINAL_TREE_VIEW_ITEM_NAME
    it_tree_view.save()
    it_organizational_structure_tree_child.type_desc = (
        ORIGINAL_ORG_STRUCTURE_TREE_VIEW_ITEM_NAME
    )
    it_organizational_structure_tree_child.save()
    it_team_information_tree_child.type_desc = ORIGINAL_TEAM_INFO_TREE_VIEW_ITEM_NAME
    it_team_information_tree_child.save()


class Migration(migrations.Migration):

    dependencies = [("custom_models", "0014_upload_sample_emib_overview")]

    operations = [
        migrations.RunPython(update_item_type_names, rollback_update_item_type_names)
    ]
